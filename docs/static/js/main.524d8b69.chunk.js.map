{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","img","console","log","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACE,oCACA,0BAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAQf,2BACGO,KAAK,OACLC,MAAOT,EACPU,SApBqB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,aCNdG,EAAc,SAAEC,GAI3B,OAFAC,QAAQC,IAAIF,GAGV,yBAAKG,UAAU,0CACb,yBAAKC,IAAMJ,EAAIK,IAAMC,IAAMN,EAAIO,QAC/B,2BAAKP,EAAIO,S,uBCTFC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfL,EADe,iDAEwBM,UAAUF,GAFlC,sDAGFG,MAAMP,GAHJ,cAGfQ,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAACjB,GACrB,MAAO,CACLkB,GAAIlB,EAAIkB,GACRX,MAAOP,EAAIO,MACXF,IAAKL,EAAImB,OAAOC,iBAAiBf,QAVhB,kBAcdW,GAdc,4CAAH,sDCIPK,EAAW,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDd,SAAEA,GAAe,IAAD,EAEhBvB,mBAAS,CACjC6B,KAAM,GACNO,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAgB1C,OATAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAM,SAAAC,GACtBH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAGZ,CAAEb,IAEEc,EDb0BK,CAAanB,GAAjCU,EAF2B,EAEhCJ,KAAaO,EAFmB,EAEnBA,QAErB,OACE,oCAEE,wBAAInB,UAAU,qCAAsCM,GAEnDa,GAAW,uBAAGnB,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aACZgB,EAAOF,KAAI,SAACjB,GAAD,OACV,kBAAC,EAAD,eAAa6B,IAAK7B,EAAIkB,IAAQlB,UEQzB8B,EArBO,WAAO,IAAD,EACU5C,mBAAS,CAAC,cADpB,mBACnB6C,EADmB,KACP9C,EADO,KAG1B,OACE,oCACE,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACG8C,EAAWd,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CACEA,SAAUA,EACVoB,IAAKpB,UCXjBuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.524d8b69.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChanges = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit}>\r\n     <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChanges}\r\n      />\r\n    </form>\r\n    </>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( img ) => {\r\n  \r\n  console.log(img);\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ img.url } alt={ img.title }></img>\r\n      <p>{ img.title }</p>\r\n    </div>\r\n  )\r\n}\r\n","export const getGifs = async (category) => {\r\n  const url =\r\n    `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=eXZ3tGmYTH3kbuc1Xlz5R8gdPTaYH1uU`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};","import React from \"react\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n\r\n      <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then( imgs => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false\r\n      })\r\n    });\r\n  }, [ category ]);\r\n\r\n  return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GiftGrid } from \"./components/GiftGrid\";\r\n\r\nconst GiftExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GiftExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GiftGrid \r\n            category={category}\r\n            key={category}>\r\n          </GiftGrid>\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GiftExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GiftExpertApp from './GiftExpertApp';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}